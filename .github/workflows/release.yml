name: "Release"

# Only trigger if we changed the files used in the image
on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:

  basic_smoketest:
    name: "Basic Smoke Test"
    uses: ./.github/workflows/main.yml
    secrets: inherit

  docker-release:
    name: "Release Docker Image"
    runs-on: ubuntu-latest
    needs: ['basic_smoketest']
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        target:
          - Dockerfile: docker/Dockerfile
          - Dockerfile: docker/Dockerfile.alpine
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Tags
        id: prepare
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          MAJOR_MINOR=${TAG%.*}
          MAJOR_ONLY=${TAG%.*.*}
          SHORT_COMMIT=${GITHUB_SHA::8}
          DATE=$(date '+%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=tag_name::${TAG}
          echo ::set-output name=major_tag::${MAJOR_ONLY}
          echo ::set-output name=major_minor_tag::${MAJOR_MINOR}
          echo ::set-output name=short_commit::${SHORT_COMMIT}
          echo ::set-output name=date::${DATE}
          if [[ ${{ matrix.target.Dockerfile }} == *"alpine"* ]]; then
            echo ::set-output name=full_tag_name::${TAG}-alpine
            echo ::set-output name=full_major_tag::${MAJOR_ONLY}-alpine
            echo ::set-output name=full_major_minor_tag::${MAJOR_MINOR}-alpine
            echo ::set-output name=latest_tag::latest-alpine
          else
            echo ::set-output name=full_tag_name::${TAG}
            echo ::set-output name=full_major_tag::${MAJOR_ONLY}
            echo ::set-output name=full_major_minor_tag::${MAJOR_MINOR}
            echo ::set-output name=latest_tag::latest
          fi

      
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and publish ${{ matrix.target.Dockerfile }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.target.Dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            BUILD_VERSION=${{ steps.prepare.outputs.tag_name }}
            BUILD_SHA=${{ steps.prepare.outputs.short_commit }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.prepare.outputs.full_tag_name }}
            ghcr.io/${{ github.repository }}:${{ steps.prepare.outputs.full_major_tag }}
            ghcr.io/${{ github.repository }}:${{ steps.prepare.outputs.full_major_minor_tag }}
            ghcr.io/${{ github.repository }}:${{ steps.prepare.outputs.latest_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
  release-github:
    name: 'Create GitHub release'
    # if: "startsWith(github.ref, 'refs/tags/v')"
    needs: ['docker-release']
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'write'
    steps:
      - name: Release
        uses: softprops/action-gh-release@v1

